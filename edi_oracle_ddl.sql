REM ******************************************************************
REM  File:        EDI.sql
REM  Description: Used for inserting EDI Partner Trading Data
REM               
REM  Created:     April 1, 2017 Caleb Crickette
REM  Modified:    April 1, 2017 CC
REM Modified:     April 15, 2017 CC
REM  Version:     1.3
REM ******************************************************************

--Drop Tables

REM ******************************************************************
REM  File: dropEDI.sql
REM  Description: used for droping EDI schema objects. 
REM ******************************************************************

PROMPT Dropping EDI schema objects

REM === Drop Tables ===

DROP TABLE SENDER CASCADE CONSTRAINTS;
DROP TABLE EDI CASCADE CONSTRAINTS;
DROP TABLE COMMUNICATION CASCADE CONSTRAINTS;
DROP TABLE CONTACT CASCADE CONSTRAINTS;
DROP TABLE TERMINAL CASCADE CONSTRAINTS;


--DROP VIEWS
DROP VIEW VW_PARTNER_TRANSMISSION;
DROP VIEW VW_TERMINAL_CONTACTS;


REM === Drop Sequences ===
DROP SEQUENCE SENDER_ID_SEQ;
DROP SEQUENCE EDI_ID_SEQ;
DROP SEQUENCE CONTACT_ID_SEQ;
DROP SEQUENCE COMMUNICATION_ID_SEQ;
DROP SEQUENCE TERMINAL_ID_SEQ;




--Create Tables

PROMPT Creating Table 'TERMINAL'
CREATE TABLE TERMINAL
 (TERMINAL_ID NUMBER (8) NOT NULL
 ,COUNTRY VARCHAR2(100) 
 ,CITY VARCHAR2(100) 
 ,ADDRESS VARCHAR2(300) 
 ,PORTTYPE VARCHAR2(100) 
 ,UNLOCODE VARCHAR(5) NOT NULL
 ,TERMINALCODE VARCHAR(6) NOT NULL
 ,TERMINALFACILITY VARCHAR2(100) 
 ,LATITUDE VARCHAR2(30) 
 ,LONGITUDE VARCHAR2(30) 
 ,WEBSITE VARCHAR2(300) 
 )
/

PROMPT Creating Table 'CONTACT'
CREATE TABLE CONTACT
 (
 CONTACT_ID NUMBER(8) NOT NULL
 ,FIRSTNAME VARCHAR(100) NOT NULL 
 ,LASTNAME VARCHAR2(100) NOT NULL
 ,EMAIL VARCHAR2(300) NOT NULL
 ,OFFICEPHONE VARCHAR(100) 
 ,DESCRIPTION VARCHAR2(500) 
 ,TITLE VARCHAR2(100)
 ,WEBSITE VARCHAR2(300) 
 ,COUNTRY VARCHAR2(100) 
 ,ZIPCODE VARCHAR2(15) 
 ,CITY VARCHAR2(100) 
 ,MOBILEPHONE VARCHAR2(100)
 ,FK_TERMINAL_ID NUMBER(8) NOT NULL
 )
/

PROMPT Creating Table 'SENDER'
CREATE TABLE SENDER
 (SENDER_ID VARCHAR(100) NOT NULL
 ,COMPANY VARCHAR2(100) 
 ,BUSINESSFUNCTION VARCHAR2(100) 
 ,DESCRIPTION VARCHAR2(500) 
 ,FK_CONTACT_ID NUMBER(8) NOT NULL
 ,FK_EDI_ID NUMBER(8) NOT NULL
 )
/

PROMPT Creating Table 'EDI'
CREATE TABLE EDI
 (EDI_ID NUMBER(8) NOT NULL
 ,MESSAGETYPE VARCHAR(100) NOT NULL
 ,EDIVERSION VARCHAR2(100) NOT NULL
 ,FILETYPE VARCHAR2(50) NOT NULL 
 ,DESCRIPTION VARCHAR2(500)   
 ,MAPPINGNAME VARCHAR2(100) 
 )
/
 PROMPT Creating Table 'COMMUNICATION'
CREATE TABLE COMMUNICATION
 (COMMUNICATION_ID NUMBER(8) NOT NULL
 ,PROTOCOL VARCHAR2(25) NOT NULL
 ,IP VARCHAR(100) 
 ,PORT NUMBER(8)
 ,FREQUENCY VARCHAR2(50) 
 ,FILEPATH VARCHAR2(500)  
 ,HTTPURL VARCHAR2(100)   
 ,USERNAME VARCHAR2(100)
 ,PASSWORD VARCHAR2(100)
 ,EMAIL VARCHAR2(100)
 ,FK_EDI_ID NUMBER(8) NOT NULL
 ,FK_SENDER_ID VARCHAR(100) NOT NULL
 )
/

--CREATE INDEXES ON PRIMARY AND FOREIGN KEYS

REM ## INDEXES AUTOMATICALLY CREATED COMMETNED OUT -cc ##

 --DECLARE PRIMARY KEY INDEXES
PROMPT Creating Index 'TERMINAL_ID_I'
CREATE INDEX TERMINAL_ID_I ON TERMINAL
 (TERMINAL_ID)
/

PROMPT Creating Index 'CONTACT_ID_I'
CREATE INDEX CONTACT_ID_I ON CONTACT
 (CONTACT_ID)
/

PROMPT Creating Index 'SENDER_ID_I'
CREATE INDEX SENDER_ID_I ON SENDER
 (SENDER_ID)
/

PROMPT Creating Index 'EDI_ID_I'
CREATE INDEX EDI_ID_I ON EDI
 (EDI_ID)
/

PROMPT Creating Index 'COMMUNICATION_ID_I'
CREATE INDEX COMMUNICATION_ID_I ON COMMUNICATION
 (COMMUNICATION_ID)
/

 --DECLARE FOREIGN KEY INDEXES
 PROMPT Creating Index 'FK_EDI_ID_I'
CREATE INDEX FK_EDI_ID_I ON COMMUNICATION
 (FK_EDI_ID)
/

PROMPT Creating Index 'FK_EDI_ID_I'
CREATE INDEX FK_SENDER_ID_I ON COMMUNICATION
 (FK_SENDER_ID)
/

 PROMPT Creating Index 'FK_CONTACT_ID_I'
CREATE INDEX FK_CONTACT_ID_I ON SENDER
 (FK_CONTACT_ID)
/

 PROMPT Creating Index 'FK_EDI_ID_I'
CREATE INDEX FK_EDI_SENDER_ID_I ON SENDER
 (FK_EDI_ID)
/

 
PROMPT Creating Index 'FK_TERMINAL_ID_I'
CREATE INDEX FK_TERMINAL_ID_I ON CONTACT
 (FK_TERMINAL_ID)
/


 --Create Primary Keys
PROMPT Creating Primary Key on 'TERMINAL'
ALTER TABLE TERMINAL
 ADD CONSTRAINT TERMINAL_PK PRIMARY KEY 
  (TERMINAL_ID)
/ 
  
PROMPT Creating Primary Key on 'SENDER'
ALTER TABLE SENDER
 ADD CONSTRAINT SENDER_PK PRIMARY KEY 
  (SENDER_ID)
/  
  
PROMPT Creating Primary Key on 'EDI'
ALTER TABLE EDI
 ADD CONSTRAINT GR_PK PRIMARY KEY 
  (EDI_ID)
/  
  
PROMPT Creating Primary Key on 'CONTACT'
ALTER TABLE CONTACT
 ADD CONSTRAINT CONTACT_PK PRIMARY KEY 
  (CONTACT_ID)
/

PROMPT Creating Primary Key on 'COMMUNICATION'
ALTER TABLE COMMUNICATION
 ADD CONSTRAINT COMMUNICATION_PK PRIMARY KEY 
  (COMMUNICATION_ID)
/  
  
  

--Create Foreign Key
PROMPT Creating Foreign Keys on 'COMMUNICATION'
ALTER TABLE COMMUNICATION ADD CONSTRAINT
 FK_EDI_COMMUNICATION_ID FOREIGN KEY 
  (FK_EDI_ID) REFERENCES EDI
  (EDI_ID)
/

PROMPT Creating Foreign Keys on 'COMMUNICATION'
ALTER TABLE COMMUNICATION ADD CONSTRAINT
 FK_EDI_SENDER_ID FOREIGN KEY 
  (FK_SENDER_ID) REFERENCES SENDER
  (SENDER_ID)
/


  PROMPT Creating Foreign Keys on 'SENDER'
ALTER TABLE SENDER ADD CONSTRAINT
 FK_SENDER_CONTACT_ID FOREIGN KEY 
  (FK_CONTACT_ID) REFERENCES CONTACT
  (CONTACT_ID)
/

  PROMPT Creating Foreign Keys on 'SENDER'
ALTER TABLE SENDER ADD CONSTRAINT
 FK_SENDER_EDI_ID FOREIGN KEY 
  (FK_EDI_ID) REFERENCES EDI
  (EDI_ID)
/

  PROMPT Creating Foreign Keys on 'CONTACT'
ALTER TABLE CONTACT ADD CONSTRAINT
 FK_CONTACT_AT_TERMINAL_EDI_ID FOREIGN KEY 
  (FK_TERMINAL_ID) REFERENCES TERMINAL
  (TERMINAL_ID)
/  
  



 --CREATE VIEWS
 CREATE VIEW VW_PARTNER_TRANSMISSION (SENDERID, COMPANY,MESSAGETYPE,PROTOCOL)
	AS SELECT
SENDER.SENDER_ID
,SENDER.COMPANY
,EDI.MESSAGETYPE
,COMMUNICATION.PROTOCOL
FROM
SENDER
,EDI
,COMMUNICATION
WHERE 
SENDER.FK_EDI_ID = EDI.EDI_ID
AND EDI.EDI_ID = COMMUNICATION.FK_EDI_ID
AND COMMUNICATION.FK_SENDER_ID = SENDER.SENDER_ID
/



CREATE VIEW VW_TERMINAL_CONTACTS (FIRSTNAME,LASTNAME,EMAIL,TERMINALCODE,UNLOCODE)
	AS SELECT
CONTACT.FIRSTNAME
,CONTACT.LASTNAME
,CONTACT.EMAIL
,TERMINAL.TERMINALCODE
,TERMINAL.UNLOCODE
FROM
TERMINAL
,CONTACT
WHERE 
TERMINAL.TERMINAL_ID = CONTACT.FK_TERMINAL_ID
/




--Create Sequence
PROMPT Creating Sequence 'TERMINAL_ID_SEQ'
CREATE SEQUENCE TERMINAL_ID_SEQ
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCYCLE
 NOCACHE
/

 PROMPT Creating Sequence 'EDI_ID_SEQ'
CREATE SEQUENCE EDI_ID_SEQ
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCYCLE
 NOCACHE
/

 PROMPT Creating Sequence 'SENDER_ID_SEQ'
CREATE SEQUENCE SENDER_ID_SEQ
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCYCLE
 NOCACHE
/

 PROMPT Creating Sequence 'COMMUNICATION_ID_SEQ'
CREATE SEQUENCE COMMUNICATION_ID_SEQ
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCYCLE
 NOCACHE
/

 PROMPT Creating Sequence 'CONTACT_ID_SEQ'
CREATE SEQUENCE CONTACT_ID_SEQ
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCYCLE
 NOCACHE
/

 --CREATE TRIGGERS
CREATE TRIGGER TERMINAL_PK_TRIGGER
BEFORE INSERT ON TERMINAL
FOR EACH ROW
  BEGIN
    SELECT TERMINAL_ID_SEQ.NEXTVAL
    INTO :new.TERMINAL_ID
    FROM dual;
  END;
/


  

CREATE TRIGGER EDI_PK_TRIGGER
BEFORE INSERT ON EDI
FOR EACH ROW
  BEGIN
    SELECT EDI_ID_SEQ.NEXTVAL
    INTO :new.EDI_ID
    FROM dual;
  END;
/
  
  

CREATE TRIGGER CONTACT_PK_TRIGGER
BEFORE INSERT ON CONTACT
FOR EACH ROW
  BEGIN
    SELECT CONTACT_ID_SEQ.NEXTVAL
    INTO :new.CONTACT_ID
    FROM dual;
  END; 
/ 

CREATE TRIGGER COMMUNICATION_PK_TRIGGER
BEFORE INSERT ON COMMUNICATION
FOR EACH ROW
  BEGIN
    SELECT COMMUNICATION_ID_SEQ.NEXTVAL
    INTO :new.COMMUNICATION_ID
    FROM dual;
  END;
/
--END SCRIPT


SELECT * FROM user_objects
/
SELECT * FROM user_tables
/
  
